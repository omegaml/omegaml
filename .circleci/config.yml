version: 2
jobs:
  test:
    working_directory: /home/circleci
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout:
          path: /home/circleci/omegaml-ce
      - run:
          name: Merge current master into PR branch
          command: |
            pr_number=${CI_PULL_REQUEST//*pull\//}
            if [ -n "$pr_number" ]
            then
              echo "Building PR #$pr_number. Try to merge current master."
              cd omegaml-ce
              git fetch
              git checkout origin/master
              git pull --ff-only origin "refs/pull/$pr_number/head" || \
                (echo "Merge failed. Please merge manually into your branch."; exit 1)
            else
              echo "Not a PR build."
            fi
      - run:
          name: Install Miniconda
          command: |
            curl -O --silent --show-error https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh
            sh Miniconda3-py39_4.9.2-Linux-x86_64.sh -b
      - run:
          name: Run unit tests
          command: |
            source miniconda3/etc/profile.d/conda.sh
            cd omegaml-ce
            docker-compose -f docker-compose-dev.yml up -d
            echo "Waiting..."
            sleep 10
            # run tests
            docker exec -i $(docker ps -qf name=mongo) mongo < scripts/mongoinit.js
            function dotest() {
              export VER=$1
              export TF_VERSION=$2
              conda env remove -q -y -n omenv$VER || echo ""
              echo "Testing with python $VER tensorflow $TF_VERSION"
              conda create -q -y -n omenv$VER python=$VER
              conda activate omenv$VER
              pip install --progress-bar off .[all,dev]
              make test
              conda deactivate
            }
            if [[ $CIRCLE_BRANCH = "release-build" ]]; then
              # due to different allowed combinations we need several loops
              # we dont use tox because tox assumes python version is installed already
              # py36
              for TF_VERSION in 1.15.3 2.2.0 2.3.0 2.3.1 2.4.0; do
                dotest 3.6 $TF_VERSION
              done
              # py37 py38
              for PYVER in 3.7 3.8; do
                for TF_VERSION in 2.2.0 2.3.0 2.3.1 2.4.0; do
                  dotest $PYVER $TF_VERSION
                done
              done
              # py39
              # tensorflow does not support 3.9 yet
              # see https://github.com/tensorflow/tensorflow/issues/44485
              #     https://github.com/tensorflow/tensorflow/issues/44400
              PYVER=3.9
              for TF_VERSION in 2.4.0; do
                dotest $PYVER $TF_VERSION
              done
              # end tests
            else
              # if this is not a release build, do a quick build for speed
              dotest 3.7
            fi
            docker-compose down --remove-orphans
          shell: /bin/bash -l -eo pipefail
      - run:
          name: Run live tests
          command: |
            source miniconda3/etc/profile.d/conda.sh
            conda activate omenv3.7
            mkdir -p ~/.omegaml
            echo $BEHAVE_YML | base64 -d > ~/.omegaml/behave.yml
            ls -lart ~/.omegaml
            cd omegaml-ce
            LIVETEST_BEHAVE_EXTRA_OPTS="--tags ~tfestimator --tags ~tfkeras --tags ~snowflake" make livetest
            sudo chmod 777 -R /tmp/screenshots
          shell: /bin/bash -l -eo pipefail
      - store_artifacts:
          path: /tmp/screenshots
  release:
    working_directory: /home/circleci
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout:
          path: /home/circleci/omegaml-ce
      - run:
          name: Install Miniconda
          command: |
            curl -O --silent --show-error https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh
            sh Miniconda3-4.5.12-Linux-x86_64.sh -b
      - run:
          name: Make image and pypi
          command: |
            source miniconda3/etc/profile.d/conda.sh
            conda create -q -y -n omenv python=3.7
            conda activate omenv
            mkdir -p ~/.omegaml
            echo $BEHAVE_YML | base64 -d > ~/.omegaml/behave.yml
            echo $PYPIRC_INI | base64 -d > ~/.pypirc
            ls -lart ~/.omegaml
            cd omegaml-ce
            VERSION=`cat omegaml/VERSION`
            pip install --progress-bar off .[all,dev]
            docker login -u omegaml -p $DOCKER_PASS
            docker-compose -f docker-compose-dev.yml up -d
            echo "Waiting..."
            sleep 10
            docker exec -i $(docker ps -qf name=mongo) mongo < scripts/mongoinit.js
            if [[ "$VERSION" =~ "-rc" || "$VERSION" =~ "-dev" ]]; then
              make release-test
            else
              make release-prod
            fi
      - store_artifacts:
          path: /tmp/screenshots
workflows:
  version: 2
  workflow:
    jobs:
      - test:
          context: omegaml
      - release:
          context: omegaml
          requires:
            - test
          filters:
            branches:
              only: release-build
