Creating a release
==================

Preparing the release

1. bumpversion patch (this creates a -dev version)
2. create a release-branch release-x.x.x (should be feature complete, taken from master)
3. create a release-build branch, to PR merge into release-x.x.x

On release-build branch:

Testing dev versions

4. bumpversion release (this creates a -dev1 version)
5. ensure everything builds & tests, apply minor fixes, bumpversion build (this increases -devN)

Publishing the release

Still on release-build branch

6. bumpversion release (this creates a -rc version)
7. ensure all tests build successfully, including livetest, deployment to testpypi works ok
8. bumpversion release (this removes the -rc & builds into pypi)
9. merge into release-x.x.x (this builds on master)
10. merge into master


bumpversion flow
----------------

adopted from https://github.com/c4urself/bump2version/pull/177

# how to get from version => new version
# $ bumpversion <patch|build|release>
1.4.1 => 1.4.2-dev1 => 1.4.2-dev2 = > 1.4.2-rc1 => 1.4.2-rc2 => 1.4.2
         patch         build          release      build        release


Details
-------

Start with an initial release, say 1.4.1

1. create a new release, starting with a development build

   $ bumpversion patch
     => 1.4.2-dev1

2. every time you build

   $ bumpversion build
    => 1.4.2-dev2

3. go to release candidate

   $ bumpversion release
   => 1.4.2-rc1

4. with every new build

   $ bumpversion build
   => 1.4.2-rc2

4. release finally

   $ bumpversion release
   => 1.4.2

Note once the final release has been reached it is not possible to bump the release
before bumping patch again. Trying to bump the release while in final release state will
issue "ValueError: The part has already the maximum value among ['dev', 'rc', 'ga'] and cannot be bumped"


Configuration file
------------------

[bumpversion]
current_version = 1.4.1
commit = True
tag = False
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)([-](?P<release>(dev|rc))+(?P<build>\d+))?
serialize =
	{major}.{minor}.{patch}-{release}{build}
	{major}.{minor}.{patch}

[bumpversion:part:release]
first_value = dev
optional_value = ga
values =
	dev
	rc
	ga

[bumpversion:part:build]
first_value = 1

[bumpversion:file:./VERSION]


